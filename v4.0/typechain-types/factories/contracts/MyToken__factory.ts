/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MyToken, MyTokenInterface } from "../../contracts/MyToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOfTokens",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ca338038062001ca3833981810160405281019062000037919062000117565b6040518060400160405280600781526020017f4d7920436f696e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f554e4300000000000000000000000000000000000000000000000000000000008152508160039081620000b49190620003b9565b508060049081620000c69190620003b9565b5050508060058190555050620004a0565b600080fd5b6000819050919050565b620000f181620000dc565b8114620000fd57600080fd5b50565b6000815190506200011181620000e6565b92915050565b60006020828403121562000130576200012f620000d7565b5b6000620001408482850162000100565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620001cb57607f821691505b602082108103620001e157620001e062000183565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200024b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200020c565b6200025786836200020c565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200029a620002946200028e84620000dc565b6200026f565b620000dc565b9050919050565b6000819050919050565b620002b68362000279565b620002ce620002c582620002a1565b84845462000219565b825550505050565b600090565b620002e5620002d6565b620002f2818484620002ab565b505050565b5b818110156200031a576200030e600082620002db565b600181019050620002f8565b5050565b601f82111562000369576200033381620001e7565b6200033e84620001fc565b810160208510156200034e578190505b620003666200035d85620001fc565b830182620002f7565b50505b505050565b600082821c905092915050565b60006200038e600019846008026200036e565b1980831691505092915050565b6000620003a983836200037b565b9150826002028217905092915050565b620003c48262000149565b67ffffffffffffffff811115620003e057620003df62000154565b5b620003ec8254620001b2565b620003f98282856200031e565b600060209050601f8311600181146200043157600084156200041c578287015190505b6200042885826200039b565b86555062000498565b601f1984166200044186620001e7565b60005b828110156200046b5784890151825560018201915060208501945060208101905062000444565b868310156200048b578489015162000487601f8916826200037b565b8355505b6001600288020188555050505b505050505050565b6117f380620004b06000396000f3fe6080604052600436106100dd5760003560e01c806395d89b411161007f578063a9059cbb11610059578063a9059cbb146102ea578063d5abeb0114610327578063d96a094a14610352578063dd62ed3e1461036e576100dd565b806395d89b41146102575780639d1b464a14610282578063a457c2d7146102ad576100dd565b806323b872dd116100bb57806323b872dd14610175578063313ce567146101b257806339509351146101dd57806370a082311461021a576100dd565b806306fdde03146100e2578063095ea7b31461010d57806318160ddd1461014a575b600080fd5b3480156100ee57600080fd5b506100f76103ab565b6040516101049190610ee9565b60405180910390f35b34801561011957600080fd5b50610134600480360381019061012f9190610fa4565b61043d565b6040516101419190610fff565b60405180910390f35b34801561015657600080fd5b5061015f610460565b60405161016c9190611029565b60405180910390f35b34801561018157600080fd5b5061019c60048036038101906101979190611044565b61046a565b6040516101a99190610fff565b60405180910390f35b3480156101be57600080fd5b506101c7610499565b6040516101d491906110b3565b60405180910390f35b3480156101e957600080fd5b5061020460048036038101906101ff9190610fa4565b6104a2565b6040516102119190610fff565b60405180910390f35b34801561022657600080fd5b50610241600480360381019061023c91906110ce565b6104d9565b60405161024e9190611029565b60405180910390f35b34801561026357600080fd5b5061026c610521565b6040516102799190610ee9565b60405180910390f35b34801561028e57600080fd5b506102976105b3565b6040516102a49190611029565b60405180910390f35b3480156102b957600080fd5b506102d460048036038101906102cf9190610fa4565b6105bc565b6040516102e19190610fff565b60405180910390f35b3480156102f657600080fd5b50610311600480360381019061030c9190610fa4565b610633565b60405161031e9190610fff565b60405180910390f35b34801561033357600080fd5b5061033c610656565b6040516103499190611029565b60405180910390f35b61036c600480360381019061036791906110fb565b61065c565b005b34801561037a57600080fd5b5061039560048036038101906103909190611128565b6106d6565b6040516103a29190611029565b60405180910390f35b6060600380546103ba90611197565b80601f01602080910402602001604051908101604052809291908181526020018280546103e690611197565b80156104335780601f1061040857610100808354040283529160200191610433565b820191906000526020600020905b81548152906001019060200180831161041657829003601f168201915b5050505050905090565b60008061044861075d565b9050610455818585610765565b600191505092915050565b6000600254905090565b60008061047561075d565b905061048285828561092e565b61048d8585856109ba565b60019150509392505050565b60006012905090565b6000806104ad61075d565b90506104ce8185856104bf85896106d6565b6104c991906111f7565b610765565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461053090611197565b80601f016020809104026020016040519081016040528092919081815260200182805461055c90611197565b80156105a95780601f1061057e576101008083540402835291602001916105a9565b820191906000526020600020905b81548152906001019060200180831161058c57829003601f168201915b5050505050905090565b60006064905090565b6000806105c761075d565b905060006105d582866106d6565b90508381101561061a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106119061129d565b60405180910390fd5b6106278286868403610765565b60019250505092915050565b60008061063e61075d565b905061064b8185856109ba565b600191505092915050565b60055481565b600061066782610c30565b9050803410156106ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a390611309565b60405180910390fd5b803411156106c9576106c881346106c39190611329565b610c4c565b5b6106d282610c96565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cb906113cf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083a90611461565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109219190611029565b60405180910390a3505050565b600061093a84846106d6565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109b457818110156109a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099d906114cd565b60405180910390fd5b6109b38484848403610765565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a209061155f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8f906115f1565b60405180910390fd5b610aa3838383610cf9565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2090611683565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c179190611029565b60405180910390a3610c2a848484610cfe565b50505050565b600081610c3b6105b3565b610c4591906116a3565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610c92573d6000803e3d6000fd5b5050565b610c9e610460565b600554610cab9190611329565b8110610cec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce390611731565b60405180910390fd5b610cf63382610d03565b50565b505050565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d699061179d565b60405180910390fd5b610d7e60008383610cf9565b8060026000828254610d9091906111f7565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e419190611029565b60405180910390a3610e5560008383610cfe565b5050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e93578082015181840152602081019050610e78565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ebb82610e59565b610ec58185610e64565b9350610ed5818560208601610e75565b610ede81610e9f565b840191505092915050565b60006020820190508181036000830152610f038184610eb0565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f3b82610f10565b9050919050565b610f4b81610f30565b8114610f5657600080fd5b50565b600081359050610f6881610f42565b92915050565b6000819050919050565b610f8181610f6e565b8114610f8c57600080fd5b50565b600081359050610f9e81610f78565b92915050565b60008060408385031215610fbb57610fba610f0b565b5b6000610fc985828601610f59565b9250506020610fda85828601610f8f565b9150509250929050565b60008115159050919050565b610ff981610fe4565b82525050565b60006020820190506110146000830184610ff0565b92915050565b61102381610f6e565b82525050565b600060208201905061103e600083018461101a565b92915050565b60008060006060848603121561105d5761105c610f0b565b5b600061106b86828701610f59565b935050602061107c86828701610f59565b925050604061108d86828701610f8f565b9150509250925092565b600060ff82169050919050565b6110ad81611097565b82525050565b60006020820190506110c860008301846110a4565b92915050565b6000602082840312156110e4576110e3610f0b565b5b60006110f284828501610f59565b91505092915050565b60006020828403121561111157611110610f0b565b5b600061111f84828501610f8f565b91505092915050565b6000806040838503121561113f5761113e610f0b565b5b600061114d85828601610f59565b925050602061115e85828601610f59565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111af57607f821691505b6020821081036111c2576111c1611168565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061120282610f6e565b915061120d83610f6e565b9250828201905080821115611225576112246111c8565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611287602583610e64565b91506112928261122b565b604082019050919050565b600060208201905081810360008301526112b68161127a565b9050919050565b7f496e73756666696369656e7420616d6f756e7400000000000000000000000000600082015250565b60006112f3601383610e64565b91506112fe826112bd565b602082019050919050565b60006020820190508181036000830152611322816112e6565b9050919050565b600061133482610f6e565b915061133f83610f6e565b9250828203905081811115611357576113566111c8565b5b92915050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006113b9602483610e64565b91506113c48261135d565b604082019050919050565b600060208201905081810360008301526113e8816113ac565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061144b602283610e64565b9150611456826113ef565b604082019050919050565b6000602082019050818103600083015261147a8161143e565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006114b7601d83610e64565b91506114c282611481565b602082019050919050565b600060208201905081810360008301526114e6816114aa565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611549602583610e64565b9150611554826114ed565b604082019050919050565b600060208201905081810360008301526115788161153c565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006115db602383610e64565b91506115e68261157f565b604082019050919050565b6000602082019050818103600083015261160a816115ce565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061166d602683610e64565b915061167882611611565b604082019050919050565b6000602082019050818103600083015261169c81611660565b9050919050565b60006116ae82610f6e565b91506116b983610f6e565b92508282026116c781610f6e565b915082820484148315176116de576116dd6111c8565b5b5092915050565b7f4c696d6974206578636565646564000000000000000000000000000000000000600082015250565b600061171b600e83610e64565b9150611726826116e5565b602082019050919050565b6000602082019050818103600083015261174a8161170e565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611787601f83610e64565b915061179282611751565b602082019050919050565b600060208201905081810360008301526117b68161177a565b905091905056fea2646970667358221220dd78921e88f4dd8e14ac18778edede33ef215e54a95d10291c7c157be84c5dce64736f6c63430008110033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    max: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(max, overrides || {});
  }
  override deploy(
    max: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(max, overrides || {}) as Promise<
      MyToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyToken__factory {
    return super.connect(runner) as MyToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new Interface(_abi) as MyTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyToken {
    return new Contract(address, _abi, runner) as unknown as MyToken;
  }
}
