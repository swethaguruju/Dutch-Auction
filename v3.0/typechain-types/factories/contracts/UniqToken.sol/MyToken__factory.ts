/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MyToken,
  MyTokenInterface,
} from "../../../contracts/UniqToken.sol/MyToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOfTokens",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620023f8380380620023f8833981810160405281019062000037919062000240565b6040518060400160405280600881526020017f4d7920546f6b656e0000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d595400000000000000000000000000000000000000000000000000000000008152508160039081620000b49190620004e2565b508060049081620000c69190620004e2565b505050620000e9620000dd6200012f60201b60201c565b6200013760201b60201c565b6200010567f22a981a77caac3c60c01b620001fd60201b60201c565b62000121675f1344efb0ba643560c01b620001fd60201b60201c565b8060068190555050620005c9565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b600080fd5b6000819050919050565b6200021a8162000205565b81146200022657600080fd5b50565b6000815190506200023a816200020f565b92915050565b60006020828403121562000259576200025862000200565b5b6000620002698482850162000229565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002f457607f821691505b6020821081036200030a5762000309620002ac565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003747fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000335565b62000380868362000335565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620003c3620003bd620003b78462000205565b62000398565b62000205565b9050919050565b6000819050919050565b620003df83620003a2565b620003f7620003ee82620003ca565b84845462000342565b825550505050565b600090565b6200040e620003ff565b6200041b818484620003d4565b505050565b5b8181101562000443576200043760008262000404565b60018101905062000421565b5050565b601f82111562000492576200045c8162000310565b620004678462000325565b8101602085101562000477578190505b6200048f620004868562000325565b83018262000420565b50505b505050565b600082821c905092915050565b6000620004b76000198460080262000497565b1980831691505092915050565b6000620004d28383620004a4565b9150826002028217905092915050565b620004ed8262000272565b67ffffffffffffffff8111156200050957620005086200027d565b5b620005158254620002db565b6200052282828562000447565b600060209050601f8311600181146200055a576000841562000545578287015190505b620005518582620004c4565b865550620005c1565b601f1984166200056a8662000310565b60005b8281101562000594578489015182556001820191506020850194506020810190506200056d565b86831015620005b45784890151620005b0601f891682620004a4565b8355505b6001600288020188555050505b505050505050565b611e1f80620005d96000396000f3fe6080604052600436106100fe5760003560e01c80638da5cb5b11610095578063a9059cbb11610064578063a9059cbb1461034d578063d5abeb011461038a578063d96a094a146103b5578063dd62ed3e146103d1578063f2fde38b1461040e576100fe565b80638da5cb5b1461028f57806395d89b41146102ba5780639d1b464a146102e5578063a457c2d714610310576100fe565b8063313ce567116100d1578063313ce567146101d357806339509351146101fe57806370a082311461023b578063715018a614610278576100fe565b806306fdde0314610103578063095ea7b31461012e57806318160ddd1461016b57806323b872dd14610196575b600080fd5b34801561010f57600080fd5b50610118610437565b60405161012591906113ed565b60405180910390f35b34801561013a57600080fd5b50610155600480360381019061015091906114a8565b6104c9565b6040516101629190611503565b60405180910390f35b34801561017757600080fd5b506101806104ec565b60405161018d919061152d565b60405180910390f35b3480156101a257600080fd5b506101bd60048036038101906101b89190611548565b6104f6565b6040516101ca9190611503565b60405180910390f35b3480156101df57600080fd5b506101e8610525565b6040516101f591906115b7565b60405180910390f35b34801561020a57600080fd5b50610225600480360381019061022091906114a8565b61052e565b6040516102329190611503565b60405180910390f35b34801561024757600080fd5b50610262600480360381019061025d91906115d2565b610565565b60405161026f919061152d565b60405180910390f35b34801561028457600080fd5b5061028d6105ad565b005b34801561029b57600080fd5b506102a46105c1565b6040516102b1919061160e565b60405180910390f35b3480156102c657600080fd5b506102cf6105eb565b6040516102dc91906113ed565b60405180910390f35b3480156102f157600080fd5b506102fa61067d565b604051610307919061152d565b60405180910390f35b34801561031c57600080fd5b50610337600480360381019061033291906114a8565b6106c1565b6040516103449190611503565b60405180910390f35b34801561035957600080fd5b50610374600480360381019061036f91906114a8565b610738565b6040516103819190611503565b60405180910390f35b34801561039657600080fd5b5061039f61075b565b6040516103ac919061152d565b60405180910390f35b6103cf60048036038101906103ca9190611629565b610761565b005b3480156103dd57600080fd5b506103f860048036038101906103f39190611656565b61090c565b604051610405919061152d565b60405180910390f35b34801561041a57600080fd5b50610435600480360381019061043091906115d2565b610993565b005b606060038054610446906116c5565b80601f0160208091040260200160405190810160405280929190818152602001828054610472906116c5565b80156104bf5780601f10610494576101008083540402835291602001916104bf565b820191906000526020600020905b8154815290600101906020018083116104a257829003601f168201915b5050505050905090565b6000806104d4610a16565b90506104e1818585610a1e565b600191505092915050565b6000600254905090565b600080610501610a16565b905061050e858285610be7565b610519858585610c73565b60019150509392505050565b60006012905090565b600080610539610a16565b905061055a81858561054b858961090c565b6105559190611725565b610a1e565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6105b5610ee9565b6105bf6000610f67565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105fa906116c5565b80601f0160208091040260200160405190810160405280929190818152602001828054610626906116c5565b80156106735780601f1061064857610100808354040283529160200191610673565b820191906000526020600020905b81548152906001019060200180831161065657829003601f168201915b5050505050905090565b600061069367f8339cf3ce16d2d960c01b61102d565b6106a767d7ec60a4e337c1ef60c01b61102d565b6106ba668f23114874e1d760c01b61102d565b6064905090565b6000806106cc610a16565b905060006106da828661090c565b90508381101561071f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610716906117cb565b60405180910390fd5b61072c8286868403610a1e565b60019250505092915050565b600080610743610a16565b9050610750818585610c73565b600191505092915050565b60065481565b61077567c309d8fd3b737ef660c01b61102d565b6107896765c3f460c4029a6860c01b61102d565b61079d672011f98204d3539160c01b61102d565b60006107a882611030565b90506107be6733d58270f50f0bfe60c01b61102d565b6107d2675c93c60e0dbff02960c01b61102d565b6107e6673f83cca5a0283acc60c01b61102d565b80341015610829576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082090611837565b60405180910390fd5b61083d6778d245123da7712360c01b61102d565b610851670377f50ff6b0526e60c01b61102d565b61086567c00958f999a0a7ec60c01b61102d565b803411156108c25761088167cd6e8ebf22d6185860c01b61102d565b610895672e0560c48c1cb9fa60c01b61102d565b6108a967ea1969794eee08f060c01b61102d565b6108bd81346108b89190611857565b611088565b6108d7565b6108d667cc25a9d6d672920260c01b61102d565b5b6108eb6779c2a7f813d2533f60c01b61102d565b6108ff67770739b817deb97460c01b61102d565b6109088261110e565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61099b610ee9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a01906118fd565b60405180910390fd5b610a1381610f67565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a849061198f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610afc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af390611a21565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610bda919061152d565b60405180910390a3505050565b6000610bf3848461090c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c6d5781811015610c5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5690611a8d565b60405180910390fd5b610c6c8484848403610a1e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ce2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd990611b1f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4890611bb1565b60405180910390fd5b610d5c8383836111fd565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610de2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd990611c43565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ed0919061152d565b60405180910390a3610ee3848484611202565b50505050565b610ef1610a16565b73ffffffffffffffffffffffffffffffffffffffff16610f0f6105c1565b73ffffffffffffffffffffffffffffffffffffffff1614610f65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5c90611caf565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b60006110466771e8782317c9747060c01b61102d565b61105a672e93701997ddc31660c01b61102d565b61106e67aa252f60afcecee660c01b61102d565b8161107761067d565b6110819190611ccf565b9050919050565b61109c67d27d57f691ae011e60c01b61102d565b6110b06704b88952c45afded60c01b61102d565b6110c4679a63471c4bd6722f60c01b61102d565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561110a573d6000803e3d6000fd5b5050565b611122672466ac26b6e29bad60c01b61102d565b611136675e75ba351477809e60c01b61102d565b61114a67296a65d7244353ae60c01b61102d565b61115e670f2db55a487fde1660c01b61102d565b6111666104ec565b6006546111739190611857565b81106111b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ab90611d5d565b60405180910390fd5b6111c8679a2ab66c0e5638f360c01b61102d565b6111dc67cf0718fa9a1cb33e60c01b61102d565b6111f067fdcc5663c6c44cb560c01b61102d565b6111fa3382611207565b50565b505050565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611276576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126d90611dc9565b60405180910390fd5b611282600083836111fd565b80600260008282546112949190611725565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611345919061152d565b60405180910390a361135960008383611202565b5050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561139757808201518184015260208101905061137c565b60008484015250505050565b6000601f19601f8301169050919050565b60006113bf8261135d565b6113c98185611368565b93506113d9818560208601611379565b6113e2816113a3565b840191505092915050565b6000602082019050818103600083015261140781846113b4565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061143f82611414565b9050919050565b61144f81611434565b811461145a57600080fd5b50565b60008135905061146c81611446565b92915050565b6000819050919050565b61148581611472565b811461149057600080fd5b50565b6000813590506114a28161147c565b92915050565b600080604083850312156114bf576114be61140f565b5b60006114cd8582860161145d565b92505060206114de85828601611493565b9150509250929050565b60008115159050919050565b6114fd816114e8565b82525050565b600060208201905061151860008301846114f4565b92915050565b61152781611472565b82525050565b6000602082019050611542600083018461151e565b92915050565b6000806000606084860312156115615761156061140f565b5b600061156f8682870161145d565b93505060206115808682870161145d565b925050604061159186828701611493565b9150509250925092565b600060ff82169050919050565b6115b18161159b565b82525050565b60006020820190506115cc60008301846115a8565b92915050565b6000602082840312156115e8576115e761140f565b5b60006115f68482850161145d565b91505092915050565b61160881611434565b82525050565b600060208201905061162360008301846115ff565b92915050565b60006020828403121561163f5761163e61140f565b5b600061164d84828501611493565b91505092915050565b6000806040838503121561166d5761166c61140f565b5b600061167b8582860161145d565b925050602061168c8582860161145d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116dd57607f821691505b6020821081036116f0576116ef611696565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061173082611472565b915061173b83611472565b9250828201905080821115611753576117526116f6565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006117b5602583611368565b91506117c082611759565b604082019050919050565b600060208201905081810360008301526117e4816117a8565b9050919050565b7f496e73756666696369656e7420616d6f756e7400000000000000000000000000600082015250565b6000611821601383611368565b915061182c826117eb565b602082019050919050565b6000602082019050818103600083015261185081611814565b9050919050565b600061186282611472565b915061186d83611472565b9250828203905081811115611885576118846116f6565b5b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006118e7602683611368565b91506118f28261188b565b604082019050919050565b60006020820190508181036000830152611916816118da565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611979602483611368565b91506119848261191d565b604082019050919050565b600060208201905081810360008301526119a88161196c565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611a0b602283611368565b9150611a16826119af565b604082019050919050565b60006020820190508181036000830152611a3a816119fe565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611a77601d83611368565b9150611a8282611a41565b602082019050919050565b60006020820190508181036000830152611aa681611a6a565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611b09602583611368565b9150611b1482611aad565b604082019050919050565b60006020820190508181036000830152611b3881611afc565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611b9b602383611368565b9150611ba682611b3f565b604082019050919050565b60006020820190508181036000830152611bca81611b8e565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611c2d602683611368565b9150611c3882611bd1565b604082019050919050565b60006020820190508181036000830152611c5c81611c20565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611c99602083611368565b9150611ca482611c63565b602082019050919050565b60006020820190508181036000830152611cc881611c8c565b9050919050565b6000611cda82611472565b9150611ce583611472565b9250828202611cf381611472565b91508282048414831517611d0a57611d096116f6565b5b5092915050565b7f4c696d6974206578636565646564000000000000000000000000000000000000600082015250565b6000611d47600e83611368565b9150611d5282611d11565b602082019050919050565b60006020820190508181036000830152611d7681611d3a565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611db3601f83611368565b9150611dbe82611d7d565b602082019050919050565b60006020820190508181036000830152611de281611da6565b905091905056fea26469706673582212200f6af5334b4f0b83c83bda9d9b95d4ae07143fe913ea38cd03fb6119d4adae9d64736f6c63430008110033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    max: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MyToken> {
    return super.deploy(max, overrides || {}) as Promise<MyToken>;
  }
  override getDeployTransaction(
    max: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(max, overrides || {});
  }
  override attach(address: string): MyToken {
    return super.attach(address) as MyToken;
  }
  override connect(signer: Signer): MyToken__factory {
    return super.connect(signer) as MyToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new utils.Interface(_abi) as MyTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyToken {
    return new Contract(address, _abi, signerOrProvider) as MyToken;
  }
}
